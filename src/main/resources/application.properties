spring.application.name=MoodyFit

server.servlet.context-path=/
server.port=9095
# utf-8 encoding
server.servlet.encoding.force=true

spring.jpa.database=oracle

# JPA 로깅 설정
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.orm.jdbc.bind=trace

spring.mvc.view.prefix = /WEB-INF/views/
spring.mvc.view.suffix = .jsp
server.servlet.jsp.init-parameters.development = true

# datasource 설정
spring.datasource.driver-class-name=oracle.jdbc.OracleDriver
spring.datasource.url=jdbc:oracle:thin:@localhost:1521:xe
spring.datasource.username=MF
spring.datasource.password=1234

# 트랜잭션 관리 설정
spring.datasource.tomcat.max-active=50
spring.datasource.tomcat.max-idle=30
spring.datasource.tomcat.max-wait=20000

# mapper.xml 경로 설정
mybatis.mapper-locations:classpath:mapper/**/*Mapper.xml
mybatis.type-aliases-package=com.mf.dto

# 파일 저장시 위치 설정
file.upload-dir=C:/dev/
#file.upload-dir=/Users/sinminjae/dev/

spring.web.resources.static-locations=file:/C:/dev/,classpath:/static/,classpath:/public/
#spring.web.resources.static-locations=file:/Users/sinminjae/dev/,classpath:/static/,classpath:/public/

spring.jpa.hibernate.ddl-auto=none

mybatis.configuration.map-underscore-to-camel-case=true

# 네이버 클라이언트 등록 세부 정보
spring.security.oauth2.client.registration.naver.client-name=naver
spring.security.oauth2.client.registration.naver.client-id=
spring.security.oauth2.client.registration.naver.client-secret=
spring.security.oauth2.client.registration.naver.redirect-uri={baseUrl}/login/oauth2/code/naver
spring.security.oauth2.client.registration.naver.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.naver.scope=name,email

# 네이버 제공자 세부 정보
spring.security.oauth2.client.provider.naver.authorization-uri=https://nid.naver.com/oauth2.0/authorize
spring.security.oauth2.client.provider.naver.token-uri=https://nid.naver.com/oauth2.0/token
spring.security.oauth2.client.provider.naver.user-info-uri=https://openapi.naver.com/v1/nid/me
spring.security.oauth2.client.provider.naver.user-name-attribute=response

# 구글
spring.security.oauth2.client.registration.google.client-name=google
spring.security.oauth2.client.registration.google.client-id=
spring.security.oauth2.client.registration.google.client-secret=
spring.security.oauth2.client.registration.google.redirect-uri={baseUrl}/login/oauth2/code/google
spring.security.oauth2.client.registration.google.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.google.scope=profile,email

# 포트원 api url 및 인증키(하세연 추가)
iamport.api.url=https://api.iamport.kr
iamport.api.key=7020072338124347
iamport.api.secret=QbF1F8ze1bGQbDVoXt5BAExE2FPsNzJjW8TwQvX5QwDxuCDANHiYY0qLboQc0Q4xO7v4y82Mg9Oshtnk

# 파일 업로드 설정
spring.servlet.multipart.max-file-size=100MB
spring.servlet.multipart.max-request-size=100MB
spring.http.multipart.max-file-size=100MB
spring.http.multipart.max-request-size=100MB

server.tomcat.max-http-post-size=104857600
server.tomcat.max-swallow-size=104857600
