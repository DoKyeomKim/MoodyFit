<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mf.mapper.AdminQnaMapper">
    <select id="getAllAdminQnas" resultType="com.mf.dto.AdminQuestionDto">
    SELECT 
        CS_QUESTION.QUESTION_IDX as questionIdx,
        CS_QUESTION.TITLE as title,
        CS_QUESTION.CONTENT as content,
        CS_QUESTION.CREATE_DATE as createDate,
        CS_QUESTION.UPDATE_DATE as updateDate,
        CS_QUESTION.STATE as state,
        USERS.ID as id
    FROM 
        CS_QUESTION
    JOIN 
        USERS ON CS_QUESTION.USER_IDX = USERS.USER_IDX
</select>
    <insert id="setCsQna">
    insert into cs_qna(QNA_IDX,CS_IDX)
    values(cs_qna_seq.nextval,1)
    </insert>
    
    <insert id="addQuestion">
    
        INSERT INTO CS_QUESTION  (
        QUESTION_IDX,
        title, 
        content,
        STATE,
        qna_idx,
        user_idx
        ) 
        VALUES (
        cs_question_seq.NEXTVAL,
        #{title},
        #{content},
		1,
		CS_QNA_SEQ.CURRVAL,
		#{userIdx}		
         )
    </insert>

  <select id="getQnaByquestionIdx" >
    SELECT 
        q.question_idx AS questionIdx,
        q.title,
        u.id AS id,
        q.content,
        q.create_date AS createDate,
        q.update_date AS updateDate
    FROM 
        cs_question q
    JOIN 
        users u ON q.user_idx = u.user_idx
    WHERE 
        q.question_idx = #{questionIdx}
</select>

  <!-- 답변 삽입 -->
    <insert id="insertAnswer" parameterType="com.mf.dto.AdminAnswerDto">
        INSERT INTO cs_answer (answer_idx, title, content, create_date, update_date, question_idx)
        VALUES (cs_answer_seq.nextval, #{title}, #{content}, SYSDATE, SYSDATE, #{questionIdx})
    </insert>

    <!-- 특정 QnA의 답변 가져오기 -->
    <select id="getAnswersByQuestionIdx" resultType="com.mf.dto.AdminAnswerDto">
        SELECT 
            answer_idx AS answerIdx,
            title,
            content,
            create_date AS createDate,
            update_date AS updateDate,
            question_idx AS questionIdx
        FROM 
            cs_answer
        WHERE 
            question_idx = #{questionIdx}
    </select>
<select id="searchQnasById" resultType="com.mf.dto.AdminQuestionDto">
    SELECT 
        cq.QUESTION_IDX as questionIdx,
        u.ID as id,
        cq.TITLE as title,
        cq.CREATE_DATE as createDate,
        cq.UPDATE_DATE as updateDate,
        cq.STATE as state
    FROM 
        CS_QUESTION cq
    JOIN 
        USERS u ON cq.USER_IDX = u.USER_IDX
    WHERE 
        cq.TITLE LIKE '%' || #{searchId} || '%'
</select>
    
    <update id="qna1">
    UPDATE cs_question
    SET state = 2
    WHERE question_idx = #{questionIdx}
</update>
<insert id="addQuestion2" parameterType="com.mf.dto.PostingQuestionDto">
    INSERT INTO POSTING_QUESTION  (
        POSTING_QUESTION_IDX,
        TITLE, 
        content,
        STATE,
        posting_idx,
        person_idx
    ) 
    VALUES (
        posting_question_seq.NEXTVAL,
        #{title, jdbcType=VARCHAR},
        #{content, jdbcType=VARCHAR},
        1,
        #{postingIdx, jdbcType=INTEGER},
        #{personIdx, jdbcType=INTEGER}
    )
</insert>
    
    
    <select id="getAllQna2s">
   SELECT 
        pq.POSTING_QUESTION_IDX,
        pq.TITLE,
 
        pq.CREATE_DATE,
        pq.STATE,
        p.NAME
    FROM 
        POSTING_QUESTION pq
    JOIN 
        PERSON p
    ON 
        pq.PERSON_IDX = p.PERSON_IDX
</select>

<select id="getQna2ByquestionIdx" >
    SELECT 
        q.posting_question_idx AS postingQuestionIdx,
        q.title,
        u.name AS name,
        q.content,
        q.create_date AS createDate
        
    FROM 
        posting_question q
    JOIN 
        person u ON q.person_idx = u.person_idx
    WHERE 
        q.posting_question_idx = #{postingQuestionIdx}
</select>

<select id="getAnswers2ByPostingQuestionIdx" resultType="com.mf.dto.PostingAnswerDto">
        SELECT 
            posting_answer_idx AS posting_answerIdx,
            title,
            content,
            create_date AS createDate,
     
            posting_question_idx AS posting_questionIdx
        FROM 
            posting_answer
        
        WHERE 
            posting_question_idx = #{postingQuestionIdx}
    </select>

    
   <insert id="insertAnswer2" parameterType="com.mf.dto.PostingAnswerDto">
        INSERT INTO posting_answer (posting_answer_idx, title, content, create_date, posting_question_idx)
        VALUES (posting_answer_seq.nextval, #{title}, #{content}, SYSDATE,  #{postingQuestionIdx})
    </insert>
</mapper>