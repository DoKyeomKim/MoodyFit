<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mf.mapper.MyPageMapper">

<select id="getCartCount">
select NVL(COUNT(cart_idx),0) as cartCount
from cart c
join person p on c.person_idx=p.person_idx
where c.state='장바구니' and p.user_idx=#{userIdx}
</select>

<select id="getAllUserPurchase">
SELECT NVL(SUM(o.total_price), 0) AS sum_price
FROM orders o
JOIN person p ON p.person_idx = o.person_idx
JOIN users u ON p.user_idx = u.user_idx
WHERE o.state != '결제중' AND p.user_idx =#{userIdx}
</select>

<select id="getOrderPrePare">
select count(o.order_idx)
from orders o
join person p on p.person_idx = o.person_idx
where o.state = '배송준비중' and p.user_idx=#{userIdx}
</select>

<select id="getOrderIng">
select count(o.order_idx)
from orders o
join person p on p.person_idx = o.person_idx
where o.state = '배송진행중' and p.user_idx=#{userIdx}
</select>
<select id="getOrderDone">
select count(o.order_idx)
from orders o
join person p on p.person_idx = o.person_idx
where o.state = '배송완료' and p.user_idx=#{userIdx}
</select>

<select id="getNickNameByUserIdx">
SELECT PERSON_IDX, NICK_NAME
FROM PERSON
WHERE USER_IDX = #{userIdx}
</select>

<select id="getStoreNameByUserIdx">
SELECT STORE_IDX, STORE_NAME
FROM STORE
WHERE USER_IDX = #{userIdx}
</select>

<select id="getPersonInfo">
SELECT 
    u.ID,
    u.PW,
    P.PERSON_IDX,
    p.NAME,
    p.NICK_NAME,
    p.EMAIL,
    p.PHONE,
    p.POST_CODE,
    p.ADDRESS,
    p.DETAIL_ADDRESS,
    p.SOCIAL,
    PS.PERSON_SPEC_IDX,
    ps.GENDER,
    ps.HEIGHT,
    ps.WEIGHT,
    ps.FOOT,
    ps.TOP,
    ps.BOTTOM
FROM 
    users u
JOIN 
    person p ON u.USER_IDX = p.USER_IDX
JOIN 
    person_spec ps ON p.PERSON_IDX = ps.PERSON_IDX
WHERE 
    u.USER_IDX = #{userIdx}
</select>

<select id="getStoreInfo">
SELECT 
U.ID,
U.PW,
S.STORE_IDX,
S.STORE_NAME,
S.MANAGER_NAME,
S.BUSINESS_NUMBER,
S.EMAIL,
S.PHONE,
S.POST_CODE,
S.ADDRESS,
S.DETAIL_ADDRESS
FROM USERS U
JOIN STORE S ON U.USER_IDX = S.USER_IDX
WHERE
U.USER_IDX=#{userIdx}
</select>

<select id="getUserById">
    SELECT * FROM USERS WHERE USER_IDX = #{userIdx}
</select>

<update id="usersUpdate">
UPDATE USERS
 SET PW = #{pw}
 WHERE USER_IDX = #{userIdx}
</update>

<update id="personUpdate">
UPDATE PERSON
SET 
NAME=#{name},
NICK_NAME=#{nickName},
EMAIL=#{email},
PHONE=#{phone},
POST_CODE=#{postCode},
ADDRESS=#{address},
DETAIL_ADDRESS=#{detailAddress}
WHERE 
PERSON_IDX = #{personIdx}
</update>

<update id="storeUpdate">
UPDATE STORE
SET 
STORE_NAME=#{storeName},
MANAGER_NAME=#{managerName},
EMAIL=#{email},
PHONE=#{phone},
POST_CODE=#{postCode},
ADDRESS=#{address},
DETAIL_ADDRESS=#{detailAddress}
WHERE 
STORE_IDX = #{storeIdx}
</update>

<update id="personSpecUpdate">
UPDATE PERSON_SPEC
SET
GENDER = #{gender},
HEIGHT = #{height},
WEIGHT = #{weight},
FOOT = #{foot},
TOP = #{top},
BOTTOM = #{bottom}
WHERE PERSON_SPEC_IDX =#{personSpecIdx}
</update>

<update id="userDelete">
UPDATE USERS
SET
STATE = 2
WHERE USER_IDX = #{userIdx}
</update>

<select id="getWishList">
select
	posting_idx,
	title,
	name,
	manufacture_name,
	price,
	file_path,
	wish_idx
FROM(
	SELECT
	posting_idx,
	title,
	name,
	manufacture_name,
	price,
	file_path,
	wish_idx,
	ROWNUM as rnum
	FROM (
	SELECT 
		distinct p.posting_idx as posting_idx,
		p.title as title,
		prod.name as name,
		prod.manufacture_name as manufacture_name,
		prod.price as price,
		pf.file_path as file_path,
		w.wish_idx as wish_idx
		FROM posting p
		JOIN posting_product pp ON p.posting_idx = pp.posting_idx
		JOIN product_info pi ON pp.product_info_idx = pi.product_info_idx
		JOIN product prod ON pi.product_idx = prod.product_idx
		JOIN product_file pf ON pf.product_info_idx = pp.product_info_idx
		JOIN wish w on p.posting_idx = w.posting_idx
		join person per on w.person_idx = per.person_idx
		where per.user_idx = #{userIdx}
	) inner_sub
)
where rnum BETWEEN #{startIndex} + 1 AND #{startIndex} + #{pageSize}
order by wish_idx desc
</select>

<select id="getWishListCount">
select count(wish_idx) from wish w
join person p on w.person_idx=p.person_idx
where p.user_idx=#{userIdx}
</select>

<select id="getPersonLevel">
select name,purchase,benefit
from person_level
where level_idx != 6
order by level_idx asc
</select>

</mapper>